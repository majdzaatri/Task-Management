[{"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\index.js":"1","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\reportWebVitals.js":"2","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\App.js":"3","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\EditableTaskDescription.js":"4","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Calendar\\Calendar.js":"5","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Layout.js":"6","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\TasksList.js":"7","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Sidebar.js":"8","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Calendar\\header.js":"9","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Calendar\\build.js":"10","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Calendar\\styles.js":"11","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Sort.js":"12","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Navbar.js":"13","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Task.js":"14","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\SearchBar.js":"15","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\getTasks.js":"16","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\LoginPage.js":"17","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\HomePage.js":"18","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\PrivateRoute.js":"19","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\auth.js":"20","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Signup.js":"21","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Login.js":"22"},{"size":643,"mtime":1613085671213,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1611433103663,"results":"25","hashOfConfig":"24"},{"size":572,"mtime":1613147953249,"results":"26","hashOfConfig":"24"},{"size":13064,"mtime":1613147953255,"results":"27","hashOfConfig":"24"},{"size":1603,"mtime":1613147953251,"results":"28","hashOfConfig":"24"},{"size":349,"mtime":1613147953257,"results":"29","hashOfConfig":"24"},{"size":4400,"mtime":1613147953273,"results":"30","hashOfConfig":"24"},{"size":954,"mtime":1613147953265,"results":"31","hashOfConfig":"24"},{"size":955,"mtime":1612441102180,"results":"32","hashOfConfig":"24"},{"size":606,"mtime":1612441102179,"results":"33","hashOfConfig":"24"},{"size":793,"mtime":1613085671193,"results":"34","hashOfConfig":"24"},{"size":2088,"mtime":1612441102185,"results":"35","hashOfConfig":"24"},{"size":1232,"mtime":1613168873302,"results":"36","hashOfConfig":"24"},{"size":1034,"mtime":1613147953270,"results":"37","hashOfConfig":"24"},{"size":568,"mtime":1613085671201,"results":"38","hashOfConfig":"24"},{"size":199,"mtime":1612627642151,"results":"39","hashOfConfig":"24"},{"size":2084,"mtime":1613147953276,"results":"40","hashOfConfig":"24"},{"size":5530,"mtime":1613168803838,"results":"41","hashOfConfig":"24"},{"size":469,"mtime":1613085671210,"results":"42","hashOfConfig":"24"},{"size":312,"mtime":1613085671212,"results":"43","hashOfConfig":"24"},{"size":3273,"mtime":1613169043598,"results":"44","hashOfConfig":"24"},{"size":3162,"mtime":1613169090469,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1k1sgcd",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\index.js",["94"],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\reportWebVitals.js",[],["95","96"],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\App.js",["97","98"],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\EditableTaskDescription.js",["99","100"],"import React, {useState} from \"react\";\nimport {DropdownButton, Dropdown, Button, Form , Row, Col} from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Rating from \"react-rating\";\n// import \"../App.css\"\nimport axios from 'axios'\nimport useFormFields from '@usereact/use-form-fields'\nimport { useAlert } from 'react-alert'\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nvar dateFormat = require(\"dateformat\");\n\n\n\nconst EditableTaskDescription = ({isEdit, deleteTask,selectedTask, setIsEdit,newTask,setTasksCount,tasksCount,setSelectedTask ,hideModal, setIsDeleteTask}) => {\n    const alert = useAlert()\n\n    var intialPriority = 0\n    if(newTask){\n        intialPriority = 0\n    } else {\n        intialPriority ='5'\n    }\n    const [priority, setPriority] = useState(intialPriority)\n\n    const onChangePriority = (value) => {\n        setPriority(value);\n        values.priority = value\n    }\n\n\n    \n\n    const initialValues = {\n        \"id\": Math.floor(Math.random() * 99999999),\n        \"name\": \"\",\n        \"title\": \"\",\n        \"priority\": 0,\n        \"category\": \"red\",\n        \"categoryDetails\": \"Home\",\n        \"date\": new Date(),\n        \"status\": \"New\"\n      }\n\n    \n      var inistialSelectedTask = {\n        \"id\": selectedTask.id,\n        \"name\": selectedTask.name,\n        \"title\": selectedTask.title,\n        \"priority\": selectedTask.priority,\n        \"category\": selectedTask.category,\n        \"date\": selectedTask.date,\n        \"status\": selectedTask.status\n      }     \n\n      const handleSubmit = e => {\n        e.preventDefault();\n        console.log('values: ', values)\n\n        axios.post('/add_task', {\n            id: values.id,\n            name: values.name,\n            title: values.title,\n            priority: values.priority,\n            category: values.category,\n            categoryDetails: values.categoryDetails,\n            date: values.date,\n            status: values.status\n        }).then((response) => {\n        console.log(response)\n        }).catch(() => {\n          alert('Error retrieving data!!!');\n        });  \n        console.log(values)\n        alert.show('Task \"' + values.title + '\" has been created successfully')\n        setTasksCount(!tasksCount) \n      }\n\n      const submit = () => {\n        confirmAlert({\n        //   title: 'Confirm to submit',\n          message: 'Are you sure you want to delete task\"' + selectedTask.title + '\"?',\n          buttons: [\n            {\n              label: 'Yes',\n              onClick: () => {\n                axios.post('/delete_Task', {\n                    id: selectedTask.id,\n                }).then((response) => {\n                console.log(response)\n                }).catch(() => {\n                  alert('Error retrieving data!!!');\n                });  \n                setIsDeleteTask(false)\n                alert.show('Task \"' + selectedTask.title + '\" has been deleted successfully')\n                setTasksCount(!tasksCount) \n              }\n            },\n            {\n              label: 'No',\n              onClick: () => {alert.show('nothing to delete')\n              setIsDeleteTask(false)\n            }\n            }\n          ]\n        });\n      };\n\n      const handleEdit = e => {\n        e.preventDefault();\n        console.log('values: ', editValues)\n        axios.post('/update_task', {\n            id: selectedTask.id,\n            name: selectedTask.name,\n            title: selectedTask.title,\n            priority: selectedTask.taskPriority,\n            category: selectedTask.category,\n            categoryDetails: selectedTask.categoryDetails,\n            date: selectedTask.date,\n            status: selectedTask.status\n        }).then((response) => {\n        console.log(response)\n        alert.show('Task \"' + selectedTask.title + '\" has been updated successfully')\n\n        }).catch(() => {\n          alert('Error retrieving data!!!');\n        });          \n        setIsEdit(!isEdit)\n        setTasksCount(!tasksCount) \n\n  }\n        if (deleteTask === true){\n            submit()\n        }\n\n      const { values, fields } = useFormFields(initialValues)\n      const [choosenStatus, setChoosenStatus] = useState(\"New\")\n      const [choosenCategory, setchoosenCategory] = useState(\"red\")\n      const [choosenCategoryDetails, setchoosenCategoryDetails] = useState(\"Home\")\n\n      const [editValues, seteditValues] = useState(inistialSelectedTask)\n\n\n      const [startDate, setStartDate] = useState(new Date());\n\n      const onDateChange = (date) => {\n        setStartDate(date)\n        values.date = date\n    }\n    return (\n        \n        <Form onSubmit={handleSubmit} className=\"p-5\">\n        \n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                {(newTask)?<input placeholder=\"Enter task title\" {...fields.title} className=\"title-input\"  / >:\n                    ((!isEdit)?<div className=\"text-center\" style={{fontSize: \"xxx-large\"}}>{selectedTask.title}</div>\n                :<input value={selectedTask.title} onChange={(e)=> setSelectedTask({...selectedTask ,title:e.target.value})}\n                 className=\"title-input\"/>)}\n            </Form.Group>\n\n\n            <Form.Group className=\"\">\n                <Form.Label placeholder=\"task Title\" className=\"font-weight-bold\">\n                    Descriptions:\n                </Form.Label>\n                {(newTask)?<Form.Control as=\"textarea\" {...fields.name} placeholder=\"Enter description if needed\" rows={3} />\n                    :<Form.Control as=\"textarea\" value={selectedTask.name} onChange={(e)=> setSelectedTask({...selectedTask ,name:e.target.value})} rows={3} disabled={!isEdit} />\n                }\n            </Form.Group>\n\n                \n            <Row className=\"my-5  mx-0 p-0\">\n                <Col className=\"pl-0\">\n                    <Form.Label className=\"font-weight-bold\">Status:</Form.Label>\n                    {(newTask)?\n                    <DropdownButton id=\"dropdown-basic-button\"  size=\"sm\" variant=\"secondary\" title={choosenStatus}>\n                        <Dropdown.Item as=\"button\"  value = 'New' onClick={(e) =>  {setChoosenStatus(\"new\") \n                        e.preventDefault()\n                        values.status = 'new'}}  >New</Dropdown.Item>\n                        <Dropdown.Item as=\"button\"  value = 'in progress'  onClick={(e) =>  {\n                        e.preventDefault()\n                        setChoosenStatus(\"In Progress\") \n                        values.status = 'In Progress'}} >In Progress</Dropdown.Item>\n                    </DropdownButton>\n                        :((!isEdit)?\n                    <Form.Label className=\"font-weight-bold d-block ml-3\">{selectedTask.status}</Form.Label>\n\n\n\n\n                    :<DropdownButton id=\"dropdown-basic-button\" size=\"sm\" variant=\"secondary\" title={selectedTask.status}>\n                        <Dropdown.Item as=\"button\" value = \"New\"  onClick={(e) =>  {setSelectedTask({...selectedTask, status:e.target.value})\n                        e.preventDefault()\n                        }}>  New   </Dropdown.Item>\n                        <Dropdown.Item as=\"button\" value = \"In Progress\"  onClick={(e) =>  {setSelectedTask({...selectedTask, status:e.target.value})\n                        e.preventDefault()\n                        }}>In Progress</Dropdown.Item>\n                    </DropdownButton>)\n                    }\n                </Col>\n                <Col className=\"py-0 mt-2\">\n                    <Form.Label className=\"font-weight-bold d-block\">Due on:</Form.Label>\n                    {(newTask)?<DatePicker  selected={startDate} onChange={date=> onDateChange(date)}  />\n                     :((!isEdit)?\n                    <Form.Label className=\"font-weight-bold d-block ml-3\">{dateFormat(new Date(selectedTask.date), \"dd/mm/yyyy\")} </Form.Label>\n                    :<DatePicker  selected={new Date(selectedTask.date)} onChange={date=> setSelectedTask({...selectedTask, date : date})}  />)\n                    }\n                    {/* <DatePicker selected={this.props.selectedTask.date} dateFormat=\"YYYY-MM-DD\" onChange={date => this.setState({dueon:date})} /> */}\n                </Col>\n            </Row>\n\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label className=\"font-weight-bold d-block\">Priority:</Form.Label>\n                {(newTask)?\n                    <Rating fractions=\"2\" initialRating={priority} {...fields.priority} onClick={onChangePriority} />\n                    :<Rating fractions=\"2\" initialRating={selectedTask.taskPriority}\n                     onClick={(e) => {\n                        setSelectedTask({...selectedTask, taskPriority:e})\n                    }\n                    } readonly={!isEdit} />\n                }\n                \n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label className=\"font-weight-bold\">Category:</Form.Label>\n                {/* <Select options={this.options} onChange={date => this.setState({options:date})} /> */}\n\n                {(newTask)?\n                \n                <DropdownButton id=\"dropdown\" size=\"sm\" variant=\"secondary\" title={choosenCategoryDetails}>\n                    <Dropdown.Item as=\"button\" value=\"Home\"  onClick={(e) =>  {setchoosenCategory(\"red\") \n                        // alert.show('Oh look, an alert!')\n                        e.preventDefault()\n                        setchoosenCategoryDetails(e.target.value)\n                        values.categoryDetails = e.target.value\n                        values.category = \"red\"}}> Home</Dropdown.Item>\n                    <Dropdown.Item as=\"button\" value=\"Work\" onClick={(e) =>  {setchoosenCategory(\"blue\") \n                        e.preventDefault()\n                        values.categoryDetails = e.target.value\n                        setchoosenCategoryDetails(e.target.value)\n                        values.category = \"blue\"}}>Work</Dropdown.Item>\n                    <Dropdown.Item as=\"button\" value=\"Homework\" onClick={(e) =>  {setchoosenCategory(\"green\") \n                        e.preventDefault()\n                        values.categoryDetails = e.target.value\n                        setchoosenCategoryDetails(e.target.value)\n                        values.category = \"green\"}}>Homework</Dropdown.Item>\n                    <Dropdown.Item as=\"button\" value=\"Category\">...</Dropdown.Item>\n                 </DropdownButton>\n                    :((!isEdit)?\n                 <Row className=\"mx-0 w-25\" style={{backgroundColor: selectedTask.category, color: \"white\"}}> {selectedTask.categoryDetails}</Row>\n\n\n                 :<DropdownButton id=\"dropdown\" size=\"sm\" variant=\"secondary\" title={selectedTask.categoryDetails}>\n                    <Dropdown.Item as=\"button\" value=\"Home\" onClick={(e) =>  {setSelectedTask({...selectedTask, category:\"red\", categoryDetails:e.target.value })\n                        e.preventDefault()\n                        }} >Home</Dropdown.Item>\n                    <Dropdown.Item as=\"button\" value=\"Work\"  onClick={(e) =>  {setSelectedTask({...selectedTask, category:\"blue\",  categoryDetails:e.target.value})\n                        e.preventDefault()\n                        }} >Work</Dropdown.Item>\n                    <Dropdown.Item as=\"button\" value=\"Homework\"  onClick={(e) =>  {setSelectedTask({...selectedTask, category:\"green\",  categoryDetails:e.target.value})\n                        e.preventDefault()\n                        }} >HomeWork</Dropdown.Item>\n                    <Dropdown.Item as=\"button\" value=\"...\"  onClick={(e) =>  {setSelectedTask({...selectedTask, category:e.target.value,  categoryDetails:e.target.value})\n                        e.preventDefault()\n                        }} >...</Dropdown.Item>\n                 </DropdownButton>)\n                }\n            </Form.Group>\n\n\n            <Row className=\"justify-content-center w-100\">\n            {(newTask)?<Button variant=\"primary\" type=\"submit\" className=\"w-25\" onClick={(e) =>{handleSubmit(e)\n                hideModal()\n            }}>Save</Button>:null}\n            {(isEdit)?<Button variant=\"primary\" type=\"submit\" className=\"w-25\"  onClick={(e) => {handleEdit(e)\n                e.preventDefault()\n            }}> Save</Button>:null}\n\n            {(newTask)?<Button variant=\"secondary\" type=\"submit\" className=\"w-25 ml-3\" onClick={(e) => {hideModal()\n                e.preventDefault()\n            }}>Close</Button>:null}\n            </Row>\n\n        </Form>\n    );\n}\n\nexport default EditableTaskDescription\n","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Calendar\\Calendar.js",[],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Layout.js",[],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\TasksList.js",[],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Sidebar.js",[],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Calendar\\header.js",[],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Calendar\\build.js",[],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Calendar\\styles.js",[],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Sort.js",[],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Navbar.js",["101","102"],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Task.js",[],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\SearchBar.js",[],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\getTasks.js",[],["103","104"],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\LoginPage.js",["105","106","107","108"],"import React, {useState, useEffect} from 'react'\nimport Login from './Components/Login'\nimport Register from './Components/Signup'\nimport {Row, Col, ToggleButtonGroup, ToggleButton} from 'react-bootstrap'\nimport './App.css'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport logo from \"./logo.png\"\n\n\nconst LoginPage = (props) => {\n\n    const [isLogin, setIsLogin] = useState(true);\n    const [isAuth, setIsAuth] = useState(false);\n    const [userName, setUserName] = useState(\"Guest\")\n    const [userEmail, setUserEmail] = useState(\"\")\n\n    const showLogin = () => {\n        if (isLogin != true){\n            setIsLogin(true)\n        }\n    }\n\n    const showRegister = () => {\n        if (isLogin == true){\n            setIsLogin(false)\n        }\n    }\n\n    useEffect(() => {\n        if(isAuth){\n            props.history.push({pathname: \"/home\", state: {name: userName, email: userEmail}});\n        }\n    }, [userName])\n    \n\n    return(\n        <Row className=\"background\" style={{margin: \"0\", height: \"100vh\"}}>\n            <Col>\n            <Row className=\"justify-content-center\" style={{marginBottom: \"-100px\"}}>\n                <img src={logo} alt=\"Logo\" />\n            </Row>\n            <Row className=\"box-controller justify-content-center mx-auto mb-1\">\n                <div\n                    className={\"controller \" + ((isLogin)\n                    ? \"selected-controller\"\n                    : \"\")}\n                    onClick={showLogin}>\n                    Login\n                </div>\n                <div\n                    className={\"controller \" + ((!isLogin)\n                    ? \"selected-controller\"\n                    : \"\")}\n                    onClick={showRegister}>\n                    Register\n                </div>\n            </Row>\n            <Row className=\"align-items-center justify-content-center m-auto background-row\">\n                {(!isLogin)? <Register />:<Login setIsAuth={setIsAuth} setUserName={setUserName} setUserEmail={setUserEmail}/>}\n            </Row>\n            </Col>\n        </Row>\n    )\n\n};\n\nexport default LoginPage;","C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\HomePage.js",["109","110","111","112"],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\PrivateRoute.js",[],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\auth.js",["113"],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Signup.js",[],"C:\\Users\\Fadi Habeeb\\Desktop\\web-Project\\Task-Management\\front-end\\src\\Components\\Login.js",["114"],{"ruleId":"115","severity":1,"message":"116","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":23},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"115","severity":1,"message":"123","line":2,"column":16,"nodeType":"117","messageId":"118","endLine":2,"endColumn":24},{"ruleId":"115","severity":1,"message":"124","line":2,"column":26,"nodeType":"117","messageId":"118","endLine":2,"endColumn":35},{"ruleId":"115","severity":1,"message":"125","line":141,"column":14,"nodeType":"117","messageId":"118","endLine":141,"endColumn":29},{"ruleId":"115","severity":1,"message":"126","line":144,"column":26,"nodeType":"117","messageId":"118","endLine":144,"endColumn":39},{"ruleId":"115","severity":1,"message":"127","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":22},{"ruleId":"128","severity":1,"message":"129","line":27,"column":51,"nodeType":"130","endLine":27,"endColumn":69},{"ruleId":"119","replacedBy":"131"},{"ruleId":"121","replacedBy":"132"},{"ruleId":"115","severity":1,"message":"133","line":4,"column":19,"nodeType":"117","messageId":"118","endLine":4,"endColumn":36},{"ruleId":"115","severity":1,"message":"134","line":4,"column":38,"nodeType":"117","messageId":"118","endLine":4,"endColumn":50},{"ruleId":"135","severity":1,"message":"136","line":15,"column":21,"nodeType":"137","messageId":"138","endLine":15,"endColumn":23},{"ruleId":"135","severity":1,"message":"139","line":21,"column":21,"nodeType":"137","messageId":"138","endLine":21,"endColumn":23},{"ruleId":"115","severity":1,"message":"140","line":7,"column":19,"nodeType":"117","messageId":"118","endLine":7,"endColumn":25},{"ruleId":"115","severity":1,"message":"141","line":14,"column":8,"nodeType":"117","messageId":"118","endLine":14,"endColumn":17},{"ruleId":"115","severity":1,"message":"142","line":15,"column":10,"nodeType":"117","messageId":"118","endLine":15,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":48,"column":6,"nodeType":"145","endLine":48,"endColumn":18,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":22,"column":16,"nodeType":"149","messageId":"150","endLine":22,"endColumn":24,"fix":"151"},{"ruleId":"115","severity":1,"message":"152","line":23,"column":9,"nodeType":"117","messageId":"118","endLine":23,"endColumn":25},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["153"],"no-negated-in-lhs",["154"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'choosenCategory' is assigned a value but never used.","'seteditValues' is assigned a value but never used.","'FaAlignRight' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["153"],["154"],"'ToggleButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Button' is defined but never used.","'LoginPage' is defined but never used.","'VscArchive' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTasks'. Either include it or remove the dependency array.","ArrayExpression",["155"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"156","text":"157"},"'updateCheckField' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},[311,311],"()","Update the dependencies array to be: [TasksCount, getTasks]",{"range":"160","text":"161"},[1510,1522],"[TasksCount, getTasks]"]